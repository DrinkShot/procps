
regexp "(.*\/)testsuite" $objdir objdir topdir

proc procps_v_version { tool } {
  global topdir
  set toolpath ${topdir}${tool}
send_user "$toolpath -V"
  set tmp [ exec $toolpath -V ]
  regexp "procps-ng version (\[0-9.\]*)" $tmp tmp version
  clone_output "$toolpath version $version\n"
}

proc free_version {} { procps_v_version free } 
proc kill_version {} { procps_v_version kill } 
proc pgrep_version {} { procps_v_version pgrep } 
proc pkill_version {} { procps_v_version pkill } 
proc pmap_version {} { procps_v_version pmap } 
proc pwdx_version {} { procps_v_version pwdx } 
proc sysctl_version {} { procps_v_version sysctl } 
proc uptime_version {} { procps_v_version uptime } 
proc vmstat_version {} { procps_v_version vmstat } 
proc w_version {} { procps_v_version w } 

#
#
# common utilities
proc expect_continue { testname reg } {
    expect {
        -re "$reg" { }
        eof { fail "$testname" }
        timeout { fail "$testname" }
    }
}

proc expect_pass { testname reg } {
    expect {
        -re "$reg" { pass "$testname" }
        eof { fail "$testname" }
        timeout { fail "$testname" }
    }
}

proc expect_blank { testname } {
    expect {
        -re "\\w" { fail "$testname" }
        eof { pass "$testname" }
        timeout { pass "$testname" }
    }
}

proc make_testproc { } {
    # Time to run the whole job
    set sleep_time 300

    global testproc_path testproc_comm testproc1_pid testproc2_pid

    set testproc_path [ exec mktemp -u ]
    exec ln -s "/bin/sleep" $testproc_path
    set testproc_comm [ exec basename $testproc_path ]

    spawn readlink $testproc_path
    expect {
        -re "^/bin/sleep\\s*$" { }
        timeout { perror "test proc does not link to sleep 1" }
        eof { perror "test proc does not link to sleep 1" }
    }

    set testproc1_pid [ exec $testproc_path $sleep_time & ]
    set testproc2_pid [ exec $testproc_path $sleep_time & ]
}
